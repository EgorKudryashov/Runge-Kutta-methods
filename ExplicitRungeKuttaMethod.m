function [X,Y] = ExplicitRungeKuttaMethod(F, state, x_0, y_0, h, rightBorder)
    switch state %Число этапов и выбор метода
        case 1 %Метод Эйлера
            A = 0;
            B = 1;
            C = 0;
        case 2 %Метод Хойна
            A = [0 0; 1 0];
            B = [0.5 0.5];
            C = [0 1];
        case 3 %Метод Симпсона
            A = [0 0 0; 0.5 0 0; -1 2 0];
            B = [1/6 2/3 1/6];
            C = [0 0.5 1];
        case 4 %Метод Рунге-Кутты
            A = [0 0 0 0; 0.5 0 0 0; 0 0.5 0 0; 0 0 1 0];
            B = [1/6 1/3 1/3 1/6];
            C = [0 0.5 0.5 1];
        case 6 
            A = [0 0 0 0 0 0; 1/3 0 0 0 0 0; 4/25 6/25 0 0 0 0; 1/4 -3 15/4 0 0 0; 6/81 90/81 -50/81 8/81 0 0; 7/30 18/30 -5/30 4/30 0 0];
            B = [48/192 0 125/192 0 -81/192 100/192];
            C = [0 1/3 2/5 1 2/3 4/5];
    end
    
    %Определяем начальные условия
    rank = length(F);
    v = 0; X = []; Y_1 = zeros(1,rank);
    v = v + 1;
    X(v) = (x_0);
    Y = y_0;
    
    while (x_0 < rightBorder)
%%%%%%%%%%% Высчитываем коэффициенты k %%%%%%%%%%%%%%
        Y_1 = Step (F, A, B, C, h, x_0, y_0);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       
        x_0 = x_0 + h;
        y_0 = Y_1';
        
        v = v + 1;
        X(v) = (x_0);
        Y = [Y, y_0];
    end
    
    
end

